kMeans <- kmeans(imgRGB[, c("R", "G", "B")], centers = kClusters)
kClusters <- 10
kMeans <- kmeans(imgRGB[, c("R", "G", "B")], centers = kClusters)
kColours <- rgb(kMeans$centers[kMeans$cluster,])
ggplot(data = imgRGB, aes(x = x, y = y)) +
geom_point(colour = kColours) +
labs(title = paste("k-Means Clustering of", kClusters, "Colours")) +
xlab("x") +
ylab("y") +
plotTheme()
kClusters <- 7
kMeans <- kmeans(imgRGB[, c("R", "G", "B")], centers = kClusters)
kColours <- rgb(kMeans$centers[kMeans$cluster,])
ggplot(data = imgRGB, aes(x = x, y = y)) +
geom_point(colour = kColours) +
labs(title = paste("k-Means Clustering of", kClusters, "Colours")) +
xlab("x") +
ylab("y") +
plotTheme()
958/6.36
125*.8
15.29*.8/6.8
38.99*.8/16.9
50.99*.8/33.8
50.99*.8/
9
25.49/7.1
50.99/17.6
54.93/35.3
15.29/6.8
38.99/16.9
qbeta(.7,2,1)
qbeta(.5,2,1)
pbeta(.5,2,1)
pbeta(.7,2,1)
?unif
qunif(.75)
qnorm(.5)
.3/.75
.52*.6
=.3
.52*.6+.3
1/.612
1/.612*.3
.6*.48
.3/.528
.75*.3
.225+.228
.225/.453
.3/.75
1-.52
.75*.3
.75*.4
.48*.6+.3
.3/.588
.75*.3
.75*.3+.48*.6
.225/.513
.75*.3+.48*.7
.225/.561
49*9+29
577989/29215088
.6/30
install.packages("UsingR")
library(UsingR);data(galton);library(reshape)
library(USingR);data(galton);library(reshape)
library(usingR);data(galton);library(reshape)
install.packages("UsingR")
library(usingR);data(galton);library(reshape)
library(UsingR);data(galton);library(reshape)
install.packages("reshape")
library(UsingR);data(galton);library(reshape)
long<-melt(galton)
View(galton)
View(long)
g<-ggplot(long,aes(x=value,fill=variable))
g<-g+geom_histogram(colour="black",binwidth=1)
g<-g+facet_grid(.~variable)
g
g<-g+geom_histogram(colour="red",binwidth=1)
g
g<-g+geom_histogram(colour="grey",binwidth=1)
g
lm(I(child~mean(child))~I(parent-mean(parent))-1,data=galton)
?I
glm<-lm(I(child~mean(child))~I(parent-mean(parent))-1,data=galton)
mean(galton$child)
lm(child~parent,data=galton)
I(child)
View(galton)
I(parent~child)
I(child~mean(child),data=galton)
I(galton$child~mean(galton$child))
glm<-lm(I(child~mean(child))~I(parent-mean(parent))-1,data=galton)
glm<-lm(I(child-mean(child))~I(parent-mean(parent))-1,data=galton)
glm
library(swirl)
ls
rm()
ls
library(swirl)
install_from_swirl("Statistical Inference")
swirl()
swirl()
33/36
decj
deck
52
4/52
0
12/52
3/51
2/50
2/51
6
.8*1.6/2
1-.64
.64
mypdf
function(1.6)-function(0)
mypdf
integrate(mypdf,0,1.6)
sqrt(2)
x<-c(0.18,-1.54,0.42,0.95)
avg(x)
average(x)
mean(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x)
lm(I(y-mean(y))~I(x-mean(x))
)
data(mtcars)
names(mtcars)
lm(mpg~wt, data=mtcars)
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
mean(x)
I(x-mean(x))
mean(x);var(x)
I(x-mean(x))/var(x)
I(x-mean(x))/sqrt(var(x))
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
coef(lm(y~x))
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
x<-c(0.18,-1.54,0.42,0.95)
w <- c(2, 1, 3, 1)
mean(xW)
mean(x*W)
sum(w)
sum(w*x)
sum(w*x^2)
sum(w*x^2)-sum(w*x)+sum(w)
sum(w*x)/sum(w)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
coef(lm(I(y-mean(y))~I(x-mean(x))))
coef(lm(I(y-mean(y))~I(x-mean(x))-1))
coef(lm(y~x-1))
lm(mpg~wt, data=mtcars)
coef(lm(mpg~wt, data=mtcars))[[2]]
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
mean(x);var(x)
I(x-mean(x))/sqrt(var(x))
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
coef(lm(y~x))
coef(lm(y~x))[[1]]
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
source('~/.active-rstudio-document', echo=TRUE)
7.99+8.99+9.99*2
40.19/36.96
40.19/36.96*10
40.19/36.96*8
40.19/36.96*7
40.19/36.96*9
75/6.3
require(datasets)
require(datasets);data(swiss)
require(datasets);data(swiss);require(GGally)
install.packages("GGally")
require(datasets);data(swiss);require(GGally);require(ggplot2)
fit3<-lm(mpg~cyl*wt,mtcars)
summary(fit3)
mtcars$cyl<-factor(mtcars$cyl)
fit3<-lm(mpg~cyl*wt,mtcars)
summary(fit3)
anova(fit,fit3)
fit<-lm(mpg~cyl+wt,mtcars)
fit2<-lm(mpg~cyl,mtcars)
anova(fit,fit3)
anova(fit,fit3,test="Chisq")
fit4<-lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
fit4
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
ptfit<-lm(y~x)
plot(ptfit)
hatvalues(ptfit)
plot(ptfit)[4]
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
ptfit<-lm(y~x)
max(hatvalues(ptfit))
plot(ptfit)$4
plot(ptfit)$[4]
plot(ptfit)[4]
plot(ptfit)$resid
plot(ptfit)$resid
max(hatvalues(ptfit))
plot(ptfit)$c(4)
plot.lm(ptfit)[4]
plot(ptfit)[4]
plot(ptfit)
par(mfrow=c(2,2))
plot(ptfit)
par(plot(ptfit),mfrow=c(2,2))
ptfit<-lm(y~x)
max(hatvalues(ptfit))
par(plot(ptfit),mfrow=c(2,2))
plot<-par(plot(ptfit),mfrow=c(2,2))
plot[2,2]
plot[4]
plot[4]
plot(ptfit)$4
plot(ptfit)
ptfit<-lm(y~x)
plot(ptfit)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
ptfit<-lm(y~x)
plot(ptfit)
dfbetas(ptfit)
?debetas
summary(fit)$coefficient[3,1]-summary(fit2)$coefficient[3,1]
summary(fit)$coefficient[3]-summary(fit2)$coefficient[3]
summary(fit)$coefficient[3]
summary(fit)
plot(ptfit)$residuals
plot(ptfit)
anova(fit,fit3,test="Chisq")
plot(ptfit)$residuals
plot(ptfit)$residuals
plot(ptfit)$resid
plot(ptfit)$QQ
?plot
plot$std
plot<-par(plot(ptfit),mfrow=c(2,2))
plot
plot[1]
par(plot(ptfit),mfrow=c(2,2))
?plot
plot(ptfit$resid)
qqnorm(ptfit$res)
leveragePlot(ptfit)
leveragePlots(ptfit)
install.packages("car")
leverage.plot(ptfit)
leverage.plot(ptfit)
leverage.plots(ptfit)
library(car)
leverage.plots(ptfit)
leveragePlots(ptfit)
resid(ptfit)
influence.measures(ptfit)
hatvalues(ptfit)
dfbetas(fit)
hatvalues(fit)
influence.measures(fit)
?influence.measures
368/525
5*14
2550/12
212*12
2500/12
different_rim_weight <- read.csv("E:/AdapTV/rim_weight_test/different_rim_weight.xlsx")
View(different_rim_weight)
View(different_rim_weight)
View(different_rim_weight)
View(different_rim_weight)
View(different_rim_weight)
different_rim_weight <- read.delim("E:/AdapTV/rim_weight_test/different_rim_weight.xlsx", quote="")
View(different_rim_weight)
View(different_rim_weight)
data<-read.table("E:/AdapTV/rim_weight_test/different_rim_weight.xlsx",header=TRUE,sep="/t")
data<-read.table("E:/AdapTV/rim_weight_test/different_rim_weight.xlsx",header=TRUE,sep=/t)
data<-read.table("E:/AdapTV/rim_weight_test/different_rim_weight.xlsx",header=TRUE)
data<-read.xlsx("E:/AdapTV/rim_weight_test/different_rim_weight.xlsx",header=TRUE,sheetName='mysheet')
library(xlsx)
data<-read.xlsx("E:/AdapTV/rim_weight_test/different_rim_weight.xlsx",header=TRUE,sheetName='mysheet')
data<-read.xlsx("E:/AdapTV/rim_weight_test/different_rim_weight.xlsx",header=TRUE,sheetName='sheet1')
data<-read.xlsx("E:/AdapTV/rim_weight_test/different_rim_weight.xlsx",header=TRUE,sheetName='Sheet1')
hist(data)
names(data)
hist(data$count)
?hist
hist(percent)
hist(data$percent)
?boxplot
boxplot(data$percent)
install.packaages("devtools")
install.packages("devtools")
library(devtools)
install_github('slidify','ramnathv')
install_github('slidify','ramnathv/slidify')
install_github('slidifyLibraries','ramnathv')
library(slidify)
install.packages("slidify")
library(slidify)
install_github('slidify','ramnathv')
install_github('slidify','ramnathv')
library(devtools)
install_github('slidify', 'ramnathv')
shinyapps::appDependencies()
library(shinyapps)
install_github('rCharts', 'ramnathv')
install.packages('sringi')
install.packages('stringi')
install.packages("stringi")
install_github('slidify', 'ramnathv')
library(devtools)
install.packages("devtools")
library(devtools)
install.packages("Rtools")
install.packages("Rtools")
data(spam)
install.packages("caret")
library(caret)
names(AlzheimerDisease)
data(AlzheimerDisease)
install.packages(c("ggplot2", "lattice"))
data(AlzheimerDisease)
install.packages("AppliedPredictiveModeling")
data(swiss)
names(swiss)
head(swiss)
?swiss
library(AppiedPredictiveModeling)
library(AppliedPredictiveModeling)
ls
data(AlzheimerDisease)
head(AlzheimerDisease)
View(predictors)
View(predictors)
install.packages("kernlab")
?plot
runApp()
446.5*.8
388.9/(446.5*.8)
388.9/(446.5*.8)*(52.5+53+22)
1.08875*(52.5+53+22)
1.08875**.8(52.5+53+22)
1.08875*.8*(52.5+53+22)
388.9/(446.5*.8)*(52.5+53+22)*.8
388.9/(446.5*.8)*(56+105)*.8
ftype(show)
library(pryr)
install.packages("pryr")
ftype(show)
library(pryr)
ftype(show)
202.72*2+111
399.99-205.1
399.99-205.1-190
17896/6216
4372522/224714
install.packages(c("AppliedPredictiveModeling", "caret", "ElemStatLearn", "pgmm", "rpart"))
library(AppliedPredictiveModeling)
data(segmentationOriginal)
library(caret)
data<-segmentationOriginal
set.seed(15)
inTrain <- data$Case == "Train"
trainData <- data[inTrain, ]
testData <- data[!inTrain, ]
cartModel <- train(Class ~ ., data=trainData, method="rpart")
cartModel$finalModel
library(AppliedPredictiveModeling,rpart)
cartModel <- train(Class ~ ., data=trainData, method="rpart")
cartModel$finalModel
View(segmentationOriginal)
View(segmentationOriginal)
inTrain
head(data)
?train
names(getModelInfo())
cartModel <- train(Class ~ ., data=trainData, method="rpart")
install.packages("e1071")
cartModel <- train(Class ~ ., data=trainData, method="rpart")
cartModel$finalModel
cartModel
plot(cartModel$finalModel, uniform=T)
text(cartModel$finalModel, cex=0.8)
install.packages("pgmm")
library(pgmm)
data(olive)
olive = olive[,-1]
head(newdata)
newdata = as.data.frame(t(colMeans(olive)))
head(newdata)
head(olive)
treeModel <- train(Area ~ ., data=olive, method="rpart2")
treeModel
predict(treeModel, newdata)
library(ElemStatLearn)
data(SAheart)
set.seed(8484)
train = sample(1:dim(SAheart)[1],size=dim(SAheart)[1]/2,replace=F)
trainSA = SAheart[train,]
testSA = SAheart[-train,]
model<-tain(chd~.,data=trainSA,method="glm",family="binomial")
model<-train(chd~.,data=trainSA,method="glm",family="binomial")
head(trainSA)
missClass = function(values,prediction){sum(((prediction > 0.5)*1) != values)/length(values)}
missClass
logitmodel<-train(chd~age + alcohol + obesity + tobacco +
typea + ldl,data=trainSA,method="glm",family="binomial")
logitmodel
ptrain<-predict(logitmodel,trainSA)
ttrain<-predict(logitmodel,testSA)
ptrain
missClass(trainSA$chd, ptrain)
missClass(trainSA$chd, ttrain)
missClass(testSA$chd, ttrain)
library(ElemStatLearn)
data(vowel.train)
data(vowel.test)
training<-vowel.train
testing<-vowel.test
head(traing)
head(traning)
head(training)
factor(training$y)
factor(testing$y)
set.seed(33833)
training$y<-as.factor(training$y)
testing$y<-as.factor(testing$y)
set.seed(33833)
rfmodel<-randomForest(y~.,data=training,importance=FALSE)
rfmodel<-randomForest(y~.,data=training,importance=FALSE)
library(ElemStatLearn,caret)
rfmodel<-randomForest(y~.,data=training,importance=FALSE)
rfmodel<-train(y~.,data=training,method="rf",prox=TRUE)
rfNews()
rfmodel<-train(y~.,data=training,method="rf",prox=TRUE)
rfmodel
order(varImp(rfmodel), decreasing=T)
?order
order(varImp(rfmodel))
rfmodel$finalmodel
rfmodel$finalModel
plot(rfmodel$finalModel, uniform=T)
text(rfmodel$finalModel, cex=0.8)
plot(rfmodel$finalModel)
text(rfmodel$finalModel, cex=0.8)
?varImp
varImp(rfmodel)
order(varImp(rfmodel))
?order
sort(varImp(rfmodel))
sort(varImp(rfmodel),decreasing=T)
order(varImp(rfmodel),decreasing=T)
order(varImp(rfmodel)$overall,decreasing=T)
varImp(rfmodel)$overall
varImp(rfmodel)$Overall
order(varImp(rfmodel)[,2],decreasing=T)
varImp(rfmodel)[,2]
varImp(rfmodel)[1]
order(varImp(rfmodel)[1],decreasing=T)
order(varImp(rfmodel)$importance,decreasing=T)
varImp(rfmodel)
2700*.6
2700*.4
23*6.4
23*6.4*.75*1.08775
`pml-training` <- read.csv("C:\\Users\\lqiu\\AppData\\Local\\Temp\\RtmpMR3lYf\\data35d418217ff7", header=FALSE)
View(`pml-training`)
data<-pml-training
head(pml-training)
head('pml-training')
pml-training
data<-`pml-training`
isAnyMissing <- sapply(data, function (x) any(is.na(x) | x == ""))
isAnyMissing
？train
?train
39990/48881
setwd("C:/Users/lqiu/Coursera/Coursera_practical_machine_learning/")
getwd()
trainUrl <-"https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
testUrl <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv"
trainFile <- "./pml-training.csv"
testFile  <- "./pml-testing.csv"
if (!file.exists(trainFile)) {
download.file(trainUrl, destfile=trainFile, method="curl")
}
if (!file.exists(testFile)) {
download.file(testUrl, destfile=testFile, method="curl")
}
if (!file.exists(trainFile)) {
download.file(trainUrl, destfile=trainFile)
}
if (!file.exists(testFile)) {
download.file(testUrl, destfile=testFile)
}
install.packages(c("rpart.plot", "randomForest", "corrplot"))
